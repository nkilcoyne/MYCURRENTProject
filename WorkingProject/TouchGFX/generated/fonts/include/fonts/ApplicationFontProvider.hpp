/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#ifndef APPLICATIONFONTPROVIDER_HPP
#define APPLICATIONFONTPROVIDER_HPP

#include <touchgfx/FontManager.hpp>

struct Typography
{
    static const touchgfx::FontId DEFAULT = 0;
    static const touchgfx::FontId LARGE = 1;
    static const touchgfx::FontId SMALL = 2;
    static const touchgfx::FontId TYPOGRAPHY_00 = 3;
    static const touchgfx::FontId TYPOGRAPHY_01 = 4;
    static const touchgfx::FontId TYPOGRAPHY_02 = 5;
    static const touchgfx::FontId TYPOGRAPHY_03 = 6;
    static const touchgfx::FontId TYPOGRAPHY_04 = 7;
    static const touchgfx::FontId TYPOGRAPHY_05 = 8;
    static const touchgfx::FontId TYPOGRAPHY_06 = 9;
    static const touchgfx::FontId TYPOGRAPHY_07 = 10;
    static const touchgfx::FontId TYPOGRAPHY_08 = 11;
};

struct TypographyFontIndex
{
    static const touchgfx::FontId DEFAULT = 0;       // malgunbd_20_4bpp
    static const touchgfx::FontId LARGE = 1;         // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;         // verdana_10_4bpp
    static const touchgfx::FontId TYPOGRAPHY_00 = 3; // malgunbd_15_4bpp
    static const touchgfx::FontId TYPOGRAPHY_01 = 3; // malgunbd_15_4bpp
    static const touchgfx::FontId TYPOGRAPHY_02 = 4; // gadugib_100_4bpp
    static const touchgfx::FontId TYPOGRAPHY_03 = 5; // malgunbd_19_4bpp
    static const touchgfx::FontId TYPOGRAPHY_04 = 6; // malgunbd_94_4bpp
    static const touchgfx::FontId TYPOGRAPHY_05 = 0; // malgunbd_20_4bpp
    static const touchgfx::FontId TYPOGRAPHY_06 = 7; // malgunbd_13_4bpp
    static const touchgfx::FontId TYPOGRAPHY_07 = 8; // malgunbd_16_4bpp
    static const touchgfx::FontId TYPOGRAPHY_08 = 9; // malgunbd_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 10;
};

class ApplicationFontProvider : public touchgfx::FontProvider
{
public:
    virtual touchgfx::Font* getFont(touchgfx::FontId typography);
};

#endif // APPLICATIONFONTPROVIDER_HPP
