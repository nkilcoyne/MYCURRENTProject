/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen3_screen/Screen3ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

#include "stm32f7xx_hal.h" //this interacts with hardware -> hal = hardware abstraction layer

/*
 * To make Reset light come on:
 * #include "stm32f7xx_hal.h"
 * Put this inside the branch for the button functions:
 * HAL_GPIO_WritePin(GPIOI, GPIO_PIN_1, GPIO_PIN_SET);
 */

Screen3ViewBase::Screen3ViewBase() :
    flexButtonCallback(this, &Screen3ViewBase::flexButtonCallbackHandler)
{

    boxWithBorder1.setPosition(0, 0, 480, 272);
    boxWithBorder1.setColor(touchgfx::Color::getColorFrom24BitRGB(153, 153, 153));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    boxWithBorder1.setBorderSize(5);

    StopEngine.setBoxWithBorderPosition(0, 0, 56, 48);
    StopEngine.setBorderSize(4);
    StopEngine.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(255, 0, 0), touchgfx::Color::getColorFrom24BitRGB(75, 0, 0), touchgfx::Color::getColorFrom24BitRGB(37, 37, 37), touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    StopEngine.setText(TypedText(T_SINGLEUSEID10));
    StopEngine.setTextPosition(0, 3, 56, 48);
    StopEngine.setTextColors(touchgfx::Color::getColorFrom24BitRGB(10, 10, 10), touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    StopEngine.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_POWER_32_ID), Bitmap(BITMAP_BLUE_ICONS_POWER_32_ID));
    StopEngine.setIconXY(0, 0);
    StopEngine.setPosition(414, 8, 56, 48);
    StopEngine.setAction(flexButtonCallback);

    boxProgress1.setXY(10, 20);
    boxProgress1.setProgressIndicatorPosition(2, 2, 100, 10);
    boxProgress1.setRange(0, 100);
    boxProgress1.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    boxProgress1.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_SMALL_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID));
    boxProgress1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 151, 255));
    boxProgress1.setValue(60);

    boxWithBorder1_1.setPosition(166, 0, 148, 77);
    boxWithBorder1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorder1_1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    boxWithBorder1_1.setBorderSize(5);

    textArea1.setXY(224, -5);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID13));

    textArea2.setXY(256, 32);
    textArea2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID14));

    add(boxWithBorder1);
    add(StopEngine);
    add(boxProgress1);
    add(boxWithBorder1_1);
    add(textArea1);
    add(textArea2);
}

void Screen3ViewBase::setupScreen()
{

}

void Screen3ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &StopEngine)
    {
        //Interaction1
        //When StopEngine clicked change screen to Screen1
        //Go to Screen1 with screen transition towards North
    	HAL_GPIO_WritePin(GPIOI, GPIO_PIN_1, GPIO_PIN_RESET);
        application().gotoScreen1ScreenCoverTransitionNorth();
    }
}
