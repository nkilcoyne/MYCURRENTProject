/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/settingsscreen_screen/SettingsScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "BitmapDatabase.hpp"

SettingsScreenViewBase::SettingsScreenViewBase() :
    flexButtonCallback(this, &SettingsScreenViewBase::flexButtonCallbackHandler)
{

    boxWithBorder1.setPosition(0, 0, 480, 272);
    boxWithBorder1.setColor(touchgfx::Color::getColorFrom24BitRGB(151, 151, 151));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorder1.setBorderSize(0);

    textArea1.setXY(145, 29);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID41));

    flexButton1.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_CALENDAR_48_ID), Bitmap(BITMAP_BLUE_ICONS_CALENDAR_48_ID));
    flexButton1.setIconXY(0, 0);
    flexButton1.setPosition(75, 124, 47, 44);

    textArea2.setXY(44, 168);
    textArea2.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID42));

    flexButton2.setBoxWithBorderPosition(0, 0, 50, 50);
    flexButton2.setBorderSize(5);
    flexButton2.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
    flexButton2.setPosition(215, 118, 50, 50);
    flexButton2.setAction(flexButtonCallback);

    textArea2_1.setXY(167, 168);
    textArea2_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea2_1.setLinespacing(0);
    textArea2_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID43));

    flexButton3.setBoxWithBorderPosition(0, 0, 50, 50);
    flexButton3.setBorderSize(5);
    flexButton3.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
    flexButton3.setPosition(366, 118, 50, 50);
    flexButton3.setAction(flexButtonCallback);

    textArea2_1_1.setXY(321, 168);
    textArea2_1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea2_1_1.setLinespacing(0);
    textArea2_1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID44));

    add(boxWithBorder1);
    add(textArea1);
    add(flexButton1);
    add(textArea2);
    add(flexButton2);
    add(textArea2_1);
    add(flexButton3);
    add(textArea2_1_1);
}

void SettingsScreenViewBase::setupScreen()
{

}

void SettingsScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton2)
    {
        //Interaction1
        //When flexButton2 clicked change screen to ChargingScreen
        //Go to ChargingScreen with no screen transition
        application().gotoChargingScreenScreenNoTransition();
    }
    else if (&src == &flexButton3)
    {
        //Interaction2
        //When flexButton3 clicked change screen to FullyChargedScreen
        //Go to FullyChargedScreen with no screen transition
        application().gotoFullyChargedScreenScreenNoTransition();
    }
}
