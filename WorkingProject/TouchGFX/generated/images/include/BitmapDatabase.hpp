// Generated by imageconverter. Please, do not edit!

#ifndef BITMAPDATABASE_HPP
#define BITMAPDATABASE_HPP

#include <touchgfx/hal/Types.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <touchgfx/Bitmap.hpp>

const uint16_t BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID = 0;
const uint16_t BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID = 1;
const uint16_t BITMAP_BLUE_ICONS_CALENDAR_48_ID = 2;
const uint16_t BITMAP_BLUE_ICONS_POWER_32_ID = 3;
const uint16_t BITMAP_BLUE_ICONS_SETTINGS_48_ID = 4;
const uint16_t BITMAP_BLUE_PROGRESSINDICATORS_BG_LARGE_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID = 5;
const uint16_t BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_CIRCLE_INDICATOR_BG_FULL_ID = 6;
const uint16_t BITMAP_BLUE_PROGRESSINDICATORS_BG_SMALL_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID = 7;
const uint16_t BITMAP_BLUE_PROGRESSINDICATORS_BG_SMALL_PROGRESS_INDICATOR_BG_SQUARE_90_DEGREES_ID = 8;
const uint16_t BITMAP_BLUE_PROGRESSINDICATORS_FILL_MEDIUM_CIRCLE_INDICATOR_FILL_LINE_FULL_ID = 9;
const uint16_t BITMAP_BLUE_PROGRESSINDICATORS_FILL_TILING_PROGRESS_INDICATOR_FILL_STRIPED_THIN_HORIZONTAL_ID = 10;
const uint16_t BITMAP_BLUE_PROGRESSINDICATORS_FILL_TILING_PROGRESS_INDICATOR_FILL_STRIPED_WIDE_HORIZONTAL_ID = 11;
const uint16_t BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_ACTIVE_ID = 12;
const uint16_t BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_INACTIVE_ID = 13;
const uint16_t BITMAP_BLUE_RADIO_BUTTONS_RADIO_ROUND_BUTTON_NORMAL_ID = 14;
const uint16_t BITMAP_CHARGING_ID = 15;
const uint16_t BITMAP_DARK_PROGRESSINDICATORS_FILL_MEDIUM_CIRCLE_INDICATOR_FILL_LINE_FULL_ID = 16;
const uint16_t BITMAP_FULLYCHARGED_ID = 17;
const uint16_t BITMAP_GAMECOCKGPLOGO_ID = 18;
const uint16_t BITMAP_GAMECOCKLOGO_RESIZESAMPLEON_ID = 19;
const uint16_t BITMAP_POWERBUTTON_ID = 20;
const uint16_t BITMAP_POWERICON_ID = 21;

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance();
uint16_t getInstanceSize();
}

#endif
